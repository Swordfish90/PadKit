[{"name":"NONE","description":"gg.padkit.config.HapticFeedbackType.NONE","location":"lib/gg.padkit.config/-haptic-feedback-type/-n-o-n-e/index.html","searchKeys":["NONE","NONE","gg.padkit.config.HapticFeedbackType.NONE"]},{"name":"PRESS","description":"gg.padkit.config.HapticFeedbackType.PRESS","location":"lib/gg.padkit.config/-haptic-feedback-type/-p-r-e-s-s/index.html","searchKeys":["PRESS","PRESS","gg.padkit.config.HapticFeedbackType.PRESS"]},{"name":"PRESS_RELEASE","description":"gg.padkit.config.HapticFeedbackType.PRESS_RELEASE","location":"lib/gg.padkit.config/-haptic-feedback-type/-p-r-e-s-s_-r-e-l-e-a-s-e/index.html","searchKeys":["PRESS_RELEASE","PRESS_RELEASE","gg.padkit.config.HapticFeedbackType.PRESS_RELEASE"]},{"name":"class LayoutRadialSecondaryDialsScope","description":"gg.padkit.layouts.radial.secondarydials.LayoutRadialSecondaryDialsScope","location":"lib/gg.padkit.layouts.radial.secondarydials/-layout-radial-secondary-dials-scope/index.html","searchKeys":["LayoutRadialSecondaryDialsScope","class LayoutRadialSecondaryDialsScope","gg.padkit.layouts.radial.secondarydials.LayoutRadialSecondaryDialsScope"]},{"name":"class PadKitScope","description":"gg.padkit.PadKitScope","location":"lib/gg.padkit/-pad-kit-scope/index.html","searchKeys":["PadKitScope","class PadKitScope","gg.padkit.PadKitScope"]},{"name":"const val PI2: Float","description":"gg.padkit.utils.Constants.PI2","location":"lib/gg.padkit.utils/-constants/-p-i2.html","searchKeys":["PI2","const val PI2: Float","gg.padkit.utils.Constants.PI2"]},{"name":"const val PI: Float","description":"gg.padkit.utils.Constants.PI","location":"lib/gg.padkit.utils/-constants/-p-i.html","searchKeys":["PI","const val PI: Float","gg.padkit.utils.Constants.PI"]},{"name":"constructor()","description":"gg.padkit.PadKitScope.PadKitScope","location":"lib/gg.padkit/-pad-kit-scope/-pad-kit-scope.html","searchKeys":["PadKitScope","constructor()","gg.padkit.PadKitScope.PadKitScope"]},{"name":"constructor()","description":"gg.padkit.layouts.radial.secondarydials.LayoutRadialSecondaryDialsScope.LayoutRadialSecondaryDialsScope","location":"lib/gg.padkit.layouts.radial.secondarydials/-layout-radial-secondary-dials-scope/-layout-radial-secondary-dials-scope.html","searchKeys":["LayoutRadialSecondaryDialsScope","constructor()","gg.padkit.layouts.radial.secondarydials.LayoutRadialSecondaryDialsScope.LayoutRadialSecondaryDialsScope"]},{"name":"constructor(digitalKeys: PersistentSet<Int> = persistentSetOf(), continuousDirections: PersistentMap<Int, Offset> = persistentMapOf(), discreteDirections: PersistentMap<Int, Offset> = persistentMapOf())","description":"gg.padkit.inputstate.InputState.InputState","location":"lib/gg.padkit.inputstate/-input-state/-input-state.html","searchKeys":["InputState","constructor(digitalKeys: PersistentSet<Int> = persistentSetOf(), continuousDirections: PersistentMap<Int, Offset> = persistentMapOf(), discreteDirections: PersistentMap<Int, Offset> = persistentMapOf())","gg.padkit.inputstate.InputState.InputState"]},{"name":"constructor(id: Int, direction: Offset)","description":"gg.padkit.inputevents.InputEvent.ContinuousDirection.ContinuousDirection","location":"lib/gg.padkit.inputevents/-input-event/-continuous-direction/-continuous-direction.html","searchKeys":["ContinuousDirection","constructor(id: Int, direction: Offset)","gg.padkit.inputevents.InputEvent.ContinuousDirection.ContinuousDirection"]},{"name":"constructor(id: Int, direction: Offset)","description":"gg.padkit.inputevents.InputEvent.DiscreteDirection.DiscreteDirection","location":"lib/gg.padkit.inputevents/-input-event/-discrete-direction/-discrete-direction.html","searchKeys":["DiscreteDirection","constructor(id: Int, direction: Offset)","gg.padkit.inputevents.InputEvent.DiscreteDirection.DiscreteDirection"]},{"name":"constructor(id: Int, pressed: Boolean)","description":"gg.padkit.inputevents.InputEvent.Button.Button","location":"lib/gg.padkit.inputevents/-input-event/-button/-button.html","searchKeys":["Button","constructor(id: Int, pressed: Boolean)","gg.padkit.inputevents.InputEvent.Button.Button"]},{"name":"constructor(position: Offset, buttons: PersistentSet<T>, size: Float)","description":"gg.padkit.anchors.Anchor.Anchor","location":"lib/gg.padkit.anchors/-anchor/-anchor.html","searchKeys":["Anchor","constructor(position: Offset, buttons: PersistentSet<T>, size: Float)","gg.padkit.anchors.Anchor.Anchor"]},{"name":"constructor(value: Int)","description":"gg.padkit.ids.ContinuousDirectionId.ContinuousDirectionId","location":"lib/gg.padkit.ids/-continuous-direction-id/-continuous-direction-id.html","searchKeys":["ContinuousDirectionId","constructor(value: Int)","gg.padkit.ids.ContinuousDirectionId.ContinuousDirectionId"]},{"name":"constructor(value: Int)","description":"gg.padkit.ids.DiscreteDirectionId.DiscreteDirectionId","location":"lib/gg.padkit.ids/-discrete-direction-id/-discrete-direction-id.html","searchKeys":["DiscreteDirectionId","constructor(value: Int)","gg.padkit.ids.DiscreteDirectionId.DiscreteDirectionId"]},{"name":"constructor(value: Int)","description":"gg.padkit.ids.KeyId.KeyId","location":"lib/gg.padkit.ids/-key-id/-key-id.html","searchKeys":["KeyId","constructor(value: Int)","gg.padkit.ids.KeyId.KeyId"]},{"name":"data class Anchor<T>(val position: Offset, val buttons: PersistentSet<T>, val size: Float)","description":"gg.padkit.anchors.Anchor","location":"lib/gg.padkit.anchors/-anchor/index.html","searchKeys":["Anchor","data class Anchor<T>(val position: Offset, val buttons: PersistentSet<T>, val size: Float)","gg.padkit.anchors.Anchor"]},{"name":"data class Button(val id: Int, val pressed: Boolean) : InputEvent","description":"gg.padkit.inputevents.InputEvent.Button","location":"lib/gg.padkit.inputevents/-input-event/-button/index.html","searchKeys":["Button","data class Button(val id: Int, val pressed: Boolean) : InputEvent","gg.padkit.inputevents.InputEvent.Button"]},{"name":"data class ContinuousDirection(val id: Int, val direction: Offset) : InputEvent","description":"gg.padkit.inputevents.InputEvent.ContinuousDirection","location":"lib/gg.padkit.inputevents/-input-event/-continuous-direction/index.html","searchKeys":["ContinuousDirection","data class ContinuousDirection(val id: Int, val direction: Offset) : InputEvent","gg.padkit.inputevents.InputEvent.ContinuousDirection"]},{"name":"data class DiscreteDirection(val id: Int, val direction: Offset) : InputEvent","description":"gg.padkit.inputevents.InputEvent.DiscreteDirection","location":"lib/gg.padkit.inputevents/-input-event/-discrete-direction/index.html","searchKeys":["DiscreteDirection","data class DiscreteDirection(val id: Int, val direction: Offset) : InputEvent","gg.padkit.inputevents.InputEvent.DiscreteDirection"]},{"name":"data class InputState(digitalKeys: PersistentSet<Int> = persistentSetOf(), continuousDirections: PersistentMap<Int, Offset> = persistentMapOf(), discreteDirections: PersistentMap<Int, Offset> = persistentMapOf())","description":"gg.padkit.inputstate.InputState","location":"lib/gg.padkit.inputstate/-input-state/index.html","searchKeys":["InputState","data class InputState(digitalKeys: PersistentSet<Int> = persistentSetOf(), continuousDirections: PersistentMap<Int, Offset> = persistentMapOf(), discreteDirections: PersistentMap<Int, Offset> = persistentMapOf())","gg.padkit.inputstate.InputState"]},{"name":"enum HapticFeedbackType : Enum<HapticFeedbackType> ","description":"gg.padkit.config.HapticFeedbackType","location":"lib/gg.padkit.config/-haptic-feedback-type/index.html","searchKeys":["HapticFeedbackType","enum HapticFeedbackType : Enum<HapticFeedbackType> ","gg.padkit.config.HapticFeedbackType"]},{"name":"fun <R> () -> R.memoize(): () -> R","description":"gg.padkit.utils.memoize","location":"lib/gg.padkit.utils/memoize.html","searchKeys":["memoize","fun <R> () -> R.memoize(): () -> R","gg.padkit.utils.memoize"]},{"name":"fun AsyncLaunchedEffect(threadKey: String, key: Any?, block: suspend CoroutineScope.() -> Unit)","description":"gg.padkit.utils.AsyncLaunchedEffect","location":"lib/gg.padkit.utils/-async-launched-effect.html","searchKeys":["AsyncLaunchedEffect","fun AsyncLaunchedEffect(threadKey: String, key: Any?, block: suspend CoroutineScope.() -> Unit)","gg.padkit.utils.AsyncLaunchedEffect"]},{"name":"fun DefaultButtonForeground(modifier: Modifier = Modifier, pressedState: State<Boolean>, scale: Float = 0.75f, iconScale: Float = 1.0f, iconPainter: Painter? = null, label: String? = null, color: Color = MaterialTheme.colorScheme.primary, pressedColor: Color = MaterialTheme.colorScheme.inversePrimary, textColor: Color = MaterialTheme.colorScheme.onPrimary, textPressedColor: Color = MaterialTheme.colorScheme.onPrimary)","description":"gg.padkit.ui.DefaultButtonForeground","location":"lib/gg.padkit.ui/-default-button-foreground.html","searchKeys":["DefaultButtonForeground","fun DefaultButtonForeground(modifier: Modifier = Modifier, pressedState: State<Boolean>, scale: Float = 0.75f, iconScale: Float = 1.0f, iconPainter: Painter? = null, label: String? = null, color: Color = MaterialTheme.colorScheme.primary, pressedColor: Color = MaterialTheme.colorScheme.inversePrimary, textColor: Color = MaterialTheme.colorScheme.onPrimary, textPressedColor: Color = MaterialTheme.colorScheme.onPrimary)","gg.padkit.ui.DefaultButtonForeground"]},{"name":"fun DefaultCompositeForeground(modifier: Modifier = Modifier, pressed: State<Boolean>, color: Color = MaterialTheme.colorScheme.primary.copy(alpha = 0.5f), pressedColor: Color = MaterialTheme.colorScheme.inversePrimary.copy(alpha = 0.5f))","description":"gg.padkit.ui.DefaultCompositeForeground","location":"lib/gg.padkit.ui/-default-composite-foreground.html","searchKeys":["DefaultCompositeForeground","fun DefaultCompositeForeground(modifier: Modifier = Modifier, pressed: State<Boolean>, color: Color = MaterialTheme.colorScheme.primary.copy(alpha = 0.5f), pressedColor: Color = MaterialTheme.colorScheme.inversePrimary.copy(alpha = 0.5f))","gg.padkit.ui.DefaultCompositeForeground"]},{"name":"fun DefaultControlBackground(modifier: Modifier = Modifier)","description":"gg.padkit.ui.DefaultControlBackground","location":"lib/gg.padkit.ui/-default-control-background.html","searchKeys":["DefaultControlBackground","fun DefaultControlBackground(modifier: Modifier = Modifier)","gg.padkit.ui.DefaultControlBackground"]},{"name":"fun DefaultCrossForeground(modifier: Modifier = Modifier, directionState: State<Offset>, rightDial: (State<Boolean>) -> Unit = {\n        DefaultButtonForeground(\n            pressedState = it,\n            iconPainter = rememberVectorPainter(Icons.Default.KeyboardArrowRight),\n        )\n    }, bottomDial: (State<Boolean>) -> Unit = {\n        DefaultButtonForeground(\n            pressedState = it,\n            iconPainter = rememberVectorPainter(Icons.Default.KeyboardArrowDown),\n        )\n    }, leftDial: (State<Boolean>) -> Unit = {\n        DefaultButtonForeground(\n            pressedState = it,\n            iconPainter = rememberVectorPainter(Icons.Default.KeyboardArrowLeft),\n        )\n    }, topDial: (State<Boolean>) -> Unit = {\n        DefaultButtonForeground(\n            pressedState = it,\n            iconPainter = rememberVectorPainter(Icons.Default.KeyboardArrowUp),\n        )\n    }, foregroundComposite: (State<Boolean>) -> Unit = {\n        DefaultCompositeForeground(pressed = it)\n    }, allowDiagonals: Boolean = true)","description":"gg.padkit.ui.DefaultCrossForeground","location":"lib/gg.padkit.ui/-default-cross-foreground.html","searchKeys":["DefaultCrossForeground","fun DefaultCrossForeground(modifier: Modifier = Modifier, directionState: State<Offset>, rightDial: (State<Boolean>) -> Unit = {\n        DefaultButtonForeground(\n            pressedState = it,\n            iconPainter = rememberVectorPainter(Icons.Default.KeyboardArrowRight),\n        )\n    }, bottomDial: (State<Boolean>) -> Unit = {\n        DefaultButtonForeground(\n            pressedState = it,\n            iconPainter = rememberVectorPainter(Icons.Default.KeyboardArrowDown),\n        )\n    }, leftDial: (State<Boolean>) -> Unit = {\n        DefaultButtonForeground(\n            pressedState = it,\n            iconPainter = rememberVectorPainter(Icons.Default.KeyboardArrowLeft),\n        )\n    }, topDial: (State<Boolean>) -> Unit = {\n        DefaultButtonForeground(\n            pressedState = it,\n            iconPainter = rememberVectorPainter(Icons.Default.KeyboardArrowUp),\n        )\n    }, foregroundComposite: (State<Boolean>) -> Unit = {\n        DefaultCompositeForeground(pressed = it)\n    }, allowDiagonals: Boolean = true)","gg.padkit.ui.DefaultCrossForeground"]},{"name":"fun Dp.textUnit(): TextUnit","description":"gg.padkit.utils.GeometryUtils.textUnit","location":"lib/gg.padkit.utils/-geometry-utils/text-unit.html","searchKeys":["textUnit","fun Dp.textUnit(): TextUnit","gg.padkit.utils.GeometryUtils.textUnit"]},{"name":"fun Float.toDegrees(): Float","description":"gg.padkit.utils.GeometryUtils.toDegrees","location":"lib/gg.padkit.utils/-geometry-utils/to-degrees.html","searchKeys":["toDegrees","fun Float.toDegrees(): Float","gg.padkit.utils.GeometryUtils.toDegrees"]},{"name":"fun Float.toRadians(): Float","description":"gg.padkit.utils.GeometryUtils.toRadians","location":"lib/gg.padkit.utils/-geometry-utils/to-radians.html","searchKeys":["toRadians","fun Float.toRadians(): Float","gg.padkit.utils.GeometryUtils.toRadians"]},{"name":"fun Modifier.radialPosition(angleInDegrees: Float): Modifier","description":"gg.padkit.layouts.radial.secondarydials.LayoutRadialSecondaryDialsScope.radialPosition","location":"lib/gg.padkit.layouts.radial.secondarydials/-layout-radial-secondary-dials-scope/radial-position.html","searchKeys":["radialPosition","fun Modifier.radialPosition(angleInDegrees: Float): Modifier","gg.padkit.layouts.radial.secondarydials.LayoutRadialSecondaryDialsScope.radialPosition"]},{"name":"fun Modifier.radialScale(scale: Float): Modifier","description":"gg.padkit.layouts.radial.secondarydials.LayoutRadialSecondaryDialsScope.radialScale","location":"lib/gg.padkit.layouts.radial.secondarydials/-layout-radial-secondary-dials-scope/radial-scale.html","searchKeys":["radialScale","fun Modifier.radialScale(scale: Float): Modifier","gg.padkit.layouts.radial.secondarydials.LayoutRadialSecondaryDialsScope.radialScale"]},{"name":"fun Offset.coerceIn(min: Offset, max: Offset): Offset","description":"gg.padkit.utils.coerceIn","location":"lib/gg.padkit.utils/coerce-in.html","searchKeys":["coerceIn","fun Offset.coerceIn(min: Offset, max: Offset): Offset","gg.padkit.utils.coerceIn"]},{"name":"fun Offset.ifUnspecified(producer: () -> Offset): Offset","description":"gg.padkit.utils.ifUnspecified","location":"lib/gg.padkit.utils/if-unspecified.html","searchKeys":["ifUnspecified","fun Offset.ifUnspecified(producer: () -> Offset): Offset","gg.padkit.utils.ifUnspecified"]},{"name":"fun Offset.min(): Float","description":"gg.padkit.utils.min","location":"lib/gg.padkit.utils/min.html","searchKeys":["min","fun Offset.min(): Float","gg.padkit.utils.min"]},{"name":"fun Offset.relativeToCenter(rect: Rect): Offset","description":"gg.padkit.utils.relativeToCenter","location":"lib/gg.padkit.utils/relative-to-center.html","searchKeys":["relativeToCenter","fun Offset.relativeToCenter(rect: Rect): Offset","gg.padkit.utils.relativeToCenter"]},{"name":"fun Offset.relativeToTopLeft(rect: Rect): Offset","description":"gg.padkit.utils.relativeToTopLeft","location":"lib/gg.padkit.utils/relative-to-top-left.html","searchKeys":["relativeToTopLeft","fun Offset.relativeToTopLeft(rect: Rect): Offset","gg.padkit.utils.relativeToTopLeft"]},{"name":"fun PadKit(modifier: Modifier = Modifier, onInputStateUpdated: (InputState) -> Unit? = null, onInputEvents: (List<InputEvent>) -> Unit? = null, hapticFeedbackType: HapticFeedbackType = HapticFeedbackType.PRESS, simulatedControlIds: State<Set<ControlId>> = mutableStateOf(emptySet()), simulatedState: State<InputState> = mutableStateOf(InputState()), content: PadKitScope.() -> Unit)","description":"gg.padkit.PadKit","location":"lib/gg.padkit/-pad-kit.html","searchKeys":["PadKit","fun PadKit(modifier: Modifier = Modifier, onInputStateUpdated: (InputState) -> Unit? = null, onInputEvents: (List<InputEvent>) -> Unit? = null, hapticFeedbackType: HapticFeedbackType = HapticFeedbackType.PRESS, simulatedControlIds: State<Set<ControlId>> = mutableStateOf(emptySet()), simulatedState: State<InputState> = mutableStateOf(InputState()), content: PadKitScope.() -> Unit)","gg.padkit.PadKit"]},{"name":"fun PadKitScope.ControlAnalog(modifier: Modifier = Modifier, id: ContinuousDirectionId, analogPressId: KeyId? = null, foregroundSize: Float = 0.66f, background: () -> Unit = { DefaultControlBackground() }, foreground: (State<Boolean>) -> Unit = {\n        DefaultButtonForeground(pressedState = it, scale = 1f)\n    })","description":"gg.padkit.controls.ControlAnalog","location":"lib/gg.padkit.controls/-control-analog.html","searchKeys":["ControlAnalog","fun PadKitScope.ControlAnalog(modifier: Modifier = Modifier, id: ContinuousDirectionId, analogPressId: KeyId? = null, foregroundSize: Float = 0.66f, background: () -> Unit = { DefaultControlBackground() }, foreground: (State<Boolean>) -> Unit = {\n        DefaultButtonForeground(pressedState = it, scale = 1f)\n    })","gg.padkit.controls.ControlAnalog"]},{"name":"fun PadKitScope.ControlButton(modifier: Modifier = Modifier, id: KeyId, background: (State<Boolean>) -> Unit = { DefaultControlBackground() }, foreground: (State<Boolean>) -> Unit = { DefaultButtonForeground(pressedState = it) })","description":"gg.padkit.controls.ControlButton","location":"lib/gg.padkit.controls/-control-button.html","searchKeys":["ControlButton","fun PadKitScope.ControlButton(modifier: Modifier = Modifier, id: KeyId, background: (State<Boolean>) -> Unit = { DefaultControlBackground() }, foreground: (State<Boolean>) -> Unit = { DefaultButtonForeground(pressedState = it) })","gg.padkit.controls.ControlButton"]},{"name":"fun PadKitScope.ControlCross(modifier: Modifier = Modifier, id: DiscreteDirectionId, allowDiagonals: Boolean = true, background: () -> Unit = { DefaultControlBackground() }, foreground: (State<Offset>) -> Unit = {\n        DefaultCrossForeground(directionState = it, allowDiagonals = allowDiagonals)\n    })","description":"gg.padkit.controls.ControlCross","location":"lib/gg.padkit.controls/-control-cross.html","searchKeys":["ControlCross","fun PadKitScope.ControlCross(modifier: Modifier = Modifier, id: DiscreteDirectionId, allowDiagonals: Boolean = true, background: () -> Unit = { DefaultControlBackground() }, foreground: (State<Offset>) -> Unit = {\n        DefaultCrossForeground(directionState = it, allowDiagonals = allowDiagonals)\n    })","gg.padkit.controls.ControlCross"]},{"name":"fun PadKitScope.ControlFaceButtons(modifier: Modifier = Modifier, primaryAnchors: PersistentList<Anchor<KeyId>>, compositeAnchors: PersistentList<Anchor<KeyId>>, background: () -> Unit = { DefaultControlBackground() }, foreground: (KeyId, State<Boolean>) -> Unit = { _, pressed ->\n        DefaultButtonForeground(pressedState = pressed)\n    }, foregroundComposite: (State<Boolean>) -> Unit = { pressed ->\n        DefaultCompositeForeground(pressed = pressed)\n    })","description":"gg.padkit.controls.ControlFaceButtons","location":"lib/gg.padkit.controls/-control-face-buttons.html","searchKeys":["ControlFaceButtons","fun PadKitScope.ControlFaceButtons(modifier: Modifier = Modifier, primaryAnchors: PersistentList<Anchor<KeyId>>, compositeAnchors: PersistentList<Anchor<KeyId>>, background: () -> Unit = { DefaultControlBackground() }, foreground: (KeyId, State<Boolean>) -> Unit = { _, pressed ->\n        DefaultButtonForeground(pressedState = pressed)\n    }, foregroundComposite: (State<Boolean>) -> Unit = { pressed ->\n        DefaultCompositeForeground(pressed = pressed)\n    })","gg.padkit.controls.ControlFaceButtons"]},{"name":"fun PadKitScope.ControlFaceButtons(modifier: Modifier = Modifier, rotationInDegrees: Float = 0.0f, ids: PersistentList<KeyId>, includeComposite: Boolean = true, background: () -> Unit = { DefaultControlBackground() }, foreground: (KeyId, State<Boolean>) -> Unit = { _, pressed ->\n        DefaultButtonForeground(pressedState = pressed)\n    }, foregroundComposite: (State<Boolean>) -> Unit = { pressed ->\n        DefaultCompositeForeground(pressed = pressed)\n    })","description":"gg.padkit.controls.ControlFaceButtons","location":"lib/gg.padkit.controls/-control-face-buttons.html","searchKeys":["ControlFaceButtons","fun PadKitScope.ControlFaceButtons(modifier: Modifier = Modifier, rotationInDegrees: Float = 0.0f, ids: PersistentList<KeyId>, includeComposite: Boolean = true, background: () -> Unit = { DefaultControlBackground() }, foreground: (KeyId, State<Boolean>) -> Unit = { _, pressed ->\n        DefaultButtonForeground(pressedState = pressed)\n    }, foregroundComposite: (State<Boolean>) -> Unit = { pressed ->\n        DefaultCompositeForeground(pressed = pressed)\n    })","gg.padkit.controls.ControlFaceButtons"]},{"name":"fun PadKitScope.LayoutRadial(modifier: Modifier = Modifier, primaryDialMaxSize: Dp = 160.dp, secondaryDialsBaseRotationInDegrees: Float = 0.0f, secondaryDialsBaseScale: Float = GeometryUtils.computeSizeOfItemsAroundCircumference(12), primaryDial: () -> Unit, secondaryDials: LayoutRadialSecondaryDialsScope.() -> Unit)","description":"LayoutRadial","location":"lib/[root]/-layout-radial.html","searchKeys":["LayoutRadial","fun PadKitScope.LayoutRadial(modifier: Modifier = Modifier, primaryDialMaxSize: Dp = 160.dp, secondaryDialsBaseRotationInDegrees: Float = 0.0f, secondaryDialsBaseScale: Float = GeometryUtils.computeSizeOfItemsAroundCircumference(12), primaryDial: () -> Unit, secondaryDials: LayoutRadialSecondaryDialsScope.() -> Unit)","LayoutRadial"]},{"name":"fun computeSizeOfItemsAroundCircumference(itemsCount: Int): Float","description":"gg.padkit.utils.GeometryUtils.computeSizeOfItemsAroundCircumference","location":"lib/gg.padkit.utils/-geometry-utils/compute-size-of-items-around-circumference.html","searchKeys":["computeSizeOfItemsAroundCircumference","fun computeSizeOfItemsAroundCircumference(itemsCount: Int): Float","gg.padkit.utils.GeometryUtils.computeSizeOfItemsAroundCircumference"]},{"name":"fun computeSizeOfItemsOnCircumference(itemsCount: Int): Float","description":"gg.padkit.utils.GeometryUtils.computeSizeOfItemsOnCircumference","location":"lib/gg.padkit.utils/-geometry-utils/compute-size-of-items-on-circumference.html","searchKeys":["computeSizeOfItemsOnCircumference","fun computeSizeOfItemsOnCircumference(itemsCount: Int): Float","gg.padkit.utils.GeometryUtils.computeSizeOfItemsOnCircumference"]},{"name":"fun getContinuousDirection(continuousDirectionId: ContinuousDirectionId, default: Offset = Offset.Unspecified): Offset","description":"gg.padkit.inputstate.InputState.getContinuousDirection","location":"lib/gg.padkit.inputstate/-input-state/get-continuous-direction.html","searchKeys":["getContinuousDirection","fun getContinuousDirection(continuousDirectionId: ContinuousDirectionId, default: Offset = Offset.Unspecified): Offset","gg.padkit.inputstate.InputState.getContinuousDirection"]},{"name":"fun getDigitalKey(digitalId: KeyId): Boolean","description":"gg.padkit.inputstate.InputState.getDigitalKey","location":"lib/gg.padkit.inputstate/-input-state/get-digital-key.html","searchKeys":["getDigitalKey","fun getDigitalKey(digitalId: KeyId): Boolean","gg.padkit.inputstate.InputState.getDigitalKey"]},{"name":"fun getDiscreteDirection(discreteDirectionId: DiscreteDirectionId, default: Offset = Offset.Unspecified): Offset","description":"gg.padkit.inputstate.InputState.getDiscreteDirection","location":"lib/gg.padkit.inputstate/-input-state/get-discrete-direction.html","searchKeys":["getDiscreteDirection","fun getDiscreteDirection(discreteDirectionId: DiscreteDirectionId, default: Offset = Offset.Unspecified): Offset","gg.padkit.inputstate.InputState.getDiscreteDirection"]},{"name":"fun mapCircleToSquare(input: Offset): Offset","description":"gg.padkit.utils.GeometryUtils.mapCircleToSquare","location":"lib/gg.padkit.utils/-geometry-utils/map-circle-to-square.html","searchKeys":["mapCircleToSquare","fun mapCircleToSquare(input: Offset): Offset","gg.padkit.utils.GeometryUtils.mapCircleToSquare"]},{"name":"fun mapSquareToCircle(input: Offset): Offset","description":"gg.padkit.utils.GeometryUtils.mapSquareToCircle","location":"lib/gg.padkit.utils/-geometry-utils/map-square-to-circle.html","searchKeys":["mapSquareToCircle","fun mapSquareToCircle(input: Offset): Offset","gg.padkit.utils.GeometryUtils.mapSquareToCircle"]},{"name":"fun mergeRectangles(rectangles: List<Rect>): Rect","description":"gg.padkit.utils.GeometryUtils.mergeRectangles","location":"lib/gg.padkit.utils/-geometry-utils/merge-rectangles.html","searchKeys":["mergeRectangles","fun mergeRectangles(rectangles: List<Rect>): Rect","gg.padkit.utils.GeometryUtils.mergeRectangles"]},{"name":"fun setContinuousDirection(continuousDirectionId: ContinuousDirectionId, offset: Offset): InputState","description":"gg.padkit.inputstate.InputState.setContinuousDirection","location":"lib/gg.padkit.inputstate/-input-state/set-continuous-direction.html","searchKeys":["setContinuousDirection","fun setContinuousDirection(continuousDirectionId: ContinuousDirectionId, offset: Offset): InputState","gg.padkit.inputstate.InputState.setContinuousDirection"]},{"name":"fun setDigitalKey(digitalId: KeyId, value: Boolean): InputState","description":"gg.padkit.inputstate.InputState.setDigitalKey","location":"lib/gg.padkit.inputstate/-input-state/set-digital-key.html","searchKeys":["setDigitalKey","fun setDigitalKey(digitalId: KeyId, value: Boolean): InputState","gg.padkit.inputstate.InputState.setDigitalKey"]},{"name":"fun setDiscreteDirection(discreteDirectionId: DiscreteDirectionId, offset: Offset): InputState","description":"gg.padkit.inputstate.InputState.setDiscreteDirection","location":"lib/gg.padkit.inputstate/-input-state/set-discrete-direction.html","searchKeys":["setDiscreteDirection","fun setDiscreteDirection(discreteDirectionId: DiscreteDirectionId, offset: Offset): InputState","gg.padkit.inputstate.InputState.setDiscreteDirection"]},{"name":"fun valueOf(value: String): HapticFeedbackType","description":"gg.padkit.config.HapticFeedbackType.valueOf","location":"lib/gg.padkit.config/-haptic-feedback-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HapticFeedbackType","gg.padkit.config.HapticFeedbackType.valueOf"]},{"name":"fun values(): Array<HapticFeedbackType>","description":"gg.padkit.config.HapticFeedbackType.values","location":"lib/gg.padkit.config/-haptic-feedback-type/values.html","searchKeys":["values","fun values(): Array<HapticFeedbackType>","gg.padkit.config.HapticFeedbackType.values"]},{"name":"interface ControlId","description":"gg.padkit.ids.ControlId","location":"lib/gg.padkit.ids/-control-id/index.html","searchKeys":["ControlId","interface ControlId","gg.padkit.ids.ControlId"]},{"name":"interface InputEvent","description":"gg.padkit.inputevents.InputEvent","location":"lib/gg.padkit.inputevents/-input-event/index.html","searchKeys":["InputEvent","interface InputEvent","gg.padkit.inputevents.InputEvent"]},{"name":"object Constants","description":"gg.padkit.utils.Constants","location":"lib/gg.padkit.utils/-constants/index.html","searchKeys":["Constants","object Constants","gg.padkit.utils.Constants"]},{"name":"object GeometryUtils","description":"gg.padkit.utils.GeometryUtils","location":"lib/gg.padkit.utils/-geometry-utils/index.html","searchKeys":["GeometryUtils","object GeometryUtils","gg.padkit.utils.GeometryUtils"]},{"name":"val DOUBLE_TAP_INTERVAL: Duration","description":"gg.padkit.utils.Constants.DOUBLE_TAP_INTERVAL","location":"lib/gg.padkit.utils/-constants/-d-o-u-b-l-e_-t-a-p_-i-n-t-e-r-v-a-l.html","searchKeys":["DOUBLE_TAP_INTERVAL","val DOUBLE_TAP_INTERVAL: Duration","gg.padkit.utils.Constants.DOUBLE_TAP_INTERVAL"]},{"name":"val buttons: PersistentSet<T>","description":"gg.padkit.anchors.Anchor.buttons","location":"lib/gg.padkit.anchors/-anchor/buttons.html","searchKeys":["buttons","val buttons: PersistentSet<T>","gg.padkit.anchors.Anchor.buttons"]},{"name":"val direction: Offset","description":"gg.padkit.inputevents.InputEvent.ContinuousDirection.direction","location":"lib/gg.padkit.inputevents/-input-event/-continuous-direction/direction.html","searchKeys":["direction","val direction: Offset","gg.padkit.inputevents.InputEvent.ContinuousDirection.direction"]},{"name":"val direction: Offset","description":"gg.padkit.inputevents.InputEvent.DiscreteDirection.direction","location":"lib/gg.padkit.inputevents/-input-event/-discrete-direction/direction.html","searchKeys":["direction","val direction: Offset","gg.padkit.inputevents.InputEvent.DiscreteDirection.direction"]},{"name":"val entries: EnumEntries<HapticFeedbackType>","description":"gg.padkit.config.HapticFeedbackType.entries","location":"lib/gg.padkit.config/-haptic-feedback-type/entries.html","searchKeys":["entries","val entries: EnumEntries<HapticFeedbackType>","gg.padkit.config.HapticFeedbackType.entries"]},{"name":"val id: Int","description":"gg.padkit.inputevents.InputEvent.Button.id","location":"lib/gg.padkit.inputevents/-input-event/-button/id.html","searchKeys":["id","val id: Int","gg.padkit.inputevents.InputEvent.Button.id"]},{"name":"val id: Int","description":"gg.padkit.inputevents.InputEvent.ContinuousDirection.id","location":"lib/gg.padkit.inputevents/-input-event/-continuous-direction/id.html","searchKeys":["id","val id: Int","gg.padkit.inputevents.InputEvent.ContinuousDirection.id"]},{"name":"val id: Int","description":"gg.padkit.inputevents.InputEvent.DiscreteDirection.id","location":"lib/gg.padkit.inputevents/-input-event/-discrete-direction/id.html","searchKeys":["id","val id: Int","gg.padkit.inputevents.InputEvent.DiscreteDirection.id"]},{"name":"val position: Offset","description":"gg.padkit.anchors.Anchor.position","location":"lib/gg.padkit.anchors/-anchor/position.html","searchKeys":["position","val position: Offset","gg.padkit.anchors.Anchor.position"]},{"name":"val pressed: Boolean","description":"gg.padkit.inputevents.InputEvent.Button.pressed","location":"lib/gg.padkit.inputevents/-input-event/-button/pressed.html","searchKeys":["pressed","val pressed: Boolean","gg.padkit.inputevents.InputEvent.Button.pressed"]},{"name":"val size: Float","description":"gg.padkit.anchors.Anchor.size","location":"lib/gg.padkit.anchors/-anchor/size.html","searchKeys":["size","val size: Float","gg.padkit.anchors.Anchor.size"]},{"name":"val value: Int","description":"gg.padkit.ids.ContinuousDirectionId.value","location":"lib/gg.padkit.ids/-continuous-direction-id/value.html","searchKeys":["value","val value: Int","gg.padkit.ids.ContinuousDirectionId.value"]},{"name":"val value: Int","description":"gg.padkit.ids.DiscreteDirectionId.value","location":"lib/gg.padkit.ids/-discrete-direction-id/value.html","searchKeys":["value","val value: Int","gg.padkit.ids.DiscreteDirectionId.value"]},{"name":"val value: Int","description":"gg.padkit.ids.KeyId.value","location":"lib/gg.padkit.ids/-key-id/value.html","searchKeys":["value","val value: Int","gg.padkit.ids.KeyId.value"]},{"name":"value class ContinuousDirectionId(val value: Int) : ControlId","description":"gg.padkit.ids.ContinuousDirectionId","location":"lib/gg.padkit.ids/-continuous-direction-id/index.html","searchKeys":["ContinuousDirectionId","value class ContinuousDirectionId(val value: Int) : ControlId","gg.padkit.ids.ContinuousDirectionId"]},{"name":"value class DiscreteDirectionId(val value: Int) : ControlId","description":"gg.padkit.ids.DiscreteDirectionId","location":"lib/gg.padkit.ids/-discrete-direction-id/index.html","searchKeys":["DiscreteDirectionId","value class DiscreteDirectionId(val value: Int) : ControlId","gg.padkit.ids.DiscreteDirectionId"]},{"name":"value class KeyId(val value: Int) : ControlId","description":"gg.padkit.ids.KeyId","location":"lib/gg.padkit.ids/-key-id/index.html","searchKeys":["KeyId","value class KeyId(val value: Int) : ControlId","gg.padkit.ids.KeyId"]}]